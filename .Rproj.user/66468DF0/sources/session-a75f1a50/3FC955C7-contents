# Filter data for Apple
apple_data <- data[data$Company == "Apple Inc.", ]

# Impute missing values with mean for Apple
apple_data$Close <- ifelse(is.na(apple_data$Close), mean(apple_data$Close, na.rm = TRUE), apple_data$Close)

# Ensure 'apple_data' is sorted by date
apple_data <- apple_data[order(apple_data$Date), ]

# Feature engineering: Create lagged variables for previous closing prices
lagged_prices <- c(1, 2, 3, 4, 5)  # Lagged periods
for (lag in lagged_prices) {
  apple_data[[paste0("Close_lag", lag)]] <- lag(apple_data$Close, lag)
}
# Remove rows with NA values in lagged variables
apple_data <- na.omit(apple_data)

# Split the data into training and testing sets
train_size <- 0.8  # 80% of data for training
train_index <- 1:round(nrow(apple_data) * train_size)
train_data <- apple_data[train_index, ]
test_data <- apple_data[-train_index, ]

# Define features and target variable
features <- c("Close_lag1", "Close_lag2", "Close_lag3", "Close_lag4", "Close_lag5")
target <- "Close"

# Train the Random Forest model for Apple
library(randomForest)
# Train the Random Forest model for Apple Inc.
library(randomForest)
rf_model <- randomForest(Close ~ ., data = train_data[, c("Close", paste0("Close_lag", lagged_prices))], ntree = 500)

# Make predictions on the testing data
test_data$Predicted_Close <- predict(rf_model, test_data)

# Extract actual closing prices and dates for Apple Inc.
actual_data <- test_data[, c("Date", "Close")]

# Extract predicted closing prices and dates for the last 4 years
last_4_years <- tail(test_data, 4*365)
predicted_data <- last_4_years[, c("Date", "Predicted_Close")]

# Plot actual closing prices over the years alongside the model's predictions for the last 4 years
plot(actual_data$Date, actual_data$Close, type = "l", col = "blue", xlab = "Date", ylab = "Closing Price", main = "Actual vs. Predicted Closing Prices")
lines(predicted_data$Date, predicted_data$Predicted_Close, type = "l", col = "red")
legend("topright", legend = c("Actual", "Predicted"), col = c("blue", "red"), lty = 1)

